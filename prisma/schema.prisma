// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // postgres vercel
  // provider = "postgresql"
  // url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection

  // postgres docker
  // provider = "postgresql"
  // url      = env("DATABASE_URL")


  // sqlite dev
  provider = "sqlite"
  url      = env("DATABASE_URL_SQLITE")
}

model User {
  userId   Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  email    String   @unique
  nick     String   @unique
  fullName String?
  admin    Boolean  @default(false)

  videos   Video[]
  comments Comment[]
}

model Video {
  videoId     Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String
  url         String   @unique // youtube url code 
  description String?
  views       Int      @default(0)
  // duration    String

  author   User? @relation(fields: [authorId], references: [userId])
  authorId Int?

  comments Comment[]
}

model Comment {
  commentId Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())

  video   Video @relation(fields: [videoId], references: [videoId], onDelete: Cascade)
  videoId Int

  author   User? @relation(fields: [authorId], references: [userId])
  authorId Int?

  children Comment[] @relation("CommentChildren")
  parent   Comment?  @relation("CommentChildren", fields: [parentId], references: [commentId])
  parentId Int?
}
